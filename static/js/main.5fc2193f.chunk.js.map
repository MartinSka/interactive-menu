{"version":3,"sources":["components/create/Checkbox.tsx","initialState.ts","context/dishes.tsx","components/create/IngredientsList.tsx","components/create/Create.tsx","components/create/Button.tsx","components/add-ingredients/Modal.tsx","components/add-ingredients/Button.tsx","components/dishes/HighlightTag.tsx","components/dishes/Ingredients.tsx","components/dishes/Dish.tsx","components/dishes/Dishes.tsx","components/Main.tsx","hooks/useDebounce.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Checkbox","ingredients","next","onChange","useState","selected","setSelected","nextIngreidients","filter","prev","ingredient","includes","length","handleState","e","newSelection","xor","target","value","ingredientsData","compact","map","selectedId","find","id","ingredientsFiltered","intersection","name","isChecked","initialRaw","initialProcessed","initialCooked","initialDishes","uniqueId","DishesContext","createContext","DishesProvider","props","raw","setRaw","processed","setProcessed","cooked","setCooked","dishes","setDishes","useMemo","Provider","useDishes","context","useContext","Error","prevIngredient","IngredientsList","index","dish","set","useEffect","processedFiltered","cookedFiltered","Stack","isInline","spacing","type","Divider","CreateDish","isOpen","onClose","setName","partialDishes","setPartialDishes","isDisable","reduce","disable","handleDishChange","useCallback","dishForm","partial","slice","Modal","onClick","Input","mb","placeholder","Button","mt","newDish","currentDishes","mr","variant","variantColor","isDisabled","undefined","createNewDish","CreateButton","useDisclosure","onOpen","size","Create","AddIngredientsModal","setCustomRaw","setCustomProcessed","setCustomCooked","resetValues","handleClose","newRaw","newProcessed","newCooked","old","AddIngredientsButton","HighlightTag","children","setIsOpen","className","Ingredients","memo","search","join","autoEscape","searchWords","textToHighlight","highlightTag","Icon","color","Dish","Accordion","state","_expanded","bg","Box","flex","textAlign","pb","pl","ingerdients","Dishes","borderRightWidth","borderLeftWidth","Main","setSearch","debouncedSearch","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","maxW","mx","px","py","FormControl","FormLabel","htmlFor","FormHelperText","d","justifyContent","App","ThemeProvider","ColorModeProvider","CSSReset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fc2193f.chunk.js","sourcesContent":["import React, { ChangeEvent, FC, useState } from \"react\";\nimport { Checkbox as ChakraCheckbox } from \"@chakra-ui/core\";\nimport { xor, intersection, compact } from \"lodash\";\nimport { Ingredient } from \"../../model/Ingredient\";\n\ntype Props = {\n  type: string;\n  ingredients: Ingredient[];\n  next?: Ingredient[];\n  onChange: (ingredients: Ingredient[]) => void;\n};\n\nconst Checkbox: FC<Props> = ({ ingredients, next, onChange }) => {\n  const [selected, setSelected] = useState<string[]>([]);\n\n  const nextIngreidients = next?.filter(\n    ({ prev }) =>\n      prev?.filter((ingredient) => selected.includes(ingredient)).length\n  );\n\n  const handleState = (e: ChangeEvent<HTMLInputElement>) => {\n    const newSelection = xor(selected, [e.target.value]);\n    setSelected(newSelection);\n\n    const ingredientsData = compact(\n      newSelection.map((selectedId) =>\n        ingredients.find(({ id }) => id === selectedId)\n      )\n    );\n\n    onChange(ingredientsData);\n  };\n\n  const ingredientsFiltered = ingredients.filter(\n    ({ id }) =>\n      !selected.length ||\n      selected.includes(id) ||\n      nextIngreidients?.find(({ prev }) => !!intersection(prev, [id]).length)\n  );\n\n  return (\n    <>\n      {ingredientsFiltered.map(({ id, name }) => (\n        <ChakraCheckbox\n          key={`check-${id}`}\n          onChange={handleState}\n          value={id}\n          isChecked={selected.includes(id)}\n        >\n          {name}\n        </ChakraCheckbox>\n      ))}\n    </>\n  );\n};\n\nexport default Checkbox;\n","import { uniqueId } from \"lodash\";\nimport { Dish } from \"./model/Dish\";\nimport { Ingredient } from \"./model/Ingredient\";\n\nexport const initialRaw: Ingredient[] = [\n  {\n    name: \"Pork\",\n    id: \"1\",\n  },\n  {\n    name: \"Eggs\",\n    id: \"2\",\n  },\n  {\n    name: \"Water\",\n    id: \"7\",\n  },\n  {\n    name: \"Flour\",\n    id: \"8\",\n  },\n  {\n    name: \"Milk\",\n    id: \"10\",\n  },\n  {\n    name: \"Mushroom\",\n    id: \"12\",\n  },\n];\n\nexport const initialProcessed: Ingredient[] = [\n  {\n    name: \"Meat\",\n    id: \"3\",\n    prev: [\"1\"],\n  },\n  {\n    name: \"Ham Eggs\",\n    id: \"5\",\n    prev: [\"2\"],\n  },\n  {\n    name: \"Bread\",\n    id: \"6\",\n    prev: [\"7\", \"8\"],\n  },\n  {\n    name: \"Cheese\",\n    id: \"9\",\n    prev: [\"10\"],\n  },\n  {\n    name: \"Fried Eggs\",\n    id: \"11\",\n    prev: [\"2\"],\n  },\n];\n\nexport const initialCooked: Ingredient[] = [\n  {\n    name: \"Bacon\",\n    id: \"4\",\n    prev: [\"3\"],\n  },\n  {\n    name: \"Sausages\",\n    id: \"13\",\n    prev: [\"3\"],\n  },\n];\n\nexport const initialDishes: Dish[] = [\n  {\n    id: uniqueId(),\n    name: \"Bacon and Eggs\",\n    ingredients: [\n      {\n        id: uniqueId(),\n        ingredients: [{ name: \"Pork\" }],\n        prev: [\n          {\n            id: uniqueId(),\n            ingredients: [{ name: \"Meat\" }],\n            prev: [\n              {\n                id: uniqueId(),\n                ingredients: [{ name: \"Bacon\" }],\n              },\n            ],\n          },\n        ],\n      },\n      {\n        id: uniqueId(),\n        ingredients: [{ name: \"Eggs\" }],\n        prev: [\n          {\n            id: uniqueId(),\n            ingredients: [{ name: \"Ham Eggs\" }],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: uniqueId(),\n    name: \"Bread\",\n    ingredients: [\n      {\n        id: uniqueId(),\n        ingredients: [{ name: \"Water\" }, { name: \"Flour\" }],\n        prev: [\n          {\n            id: uniqueId(),\n            ingredients: [{ name: \"Bread\" }],\n          },\n        ],\n      },\n    ],\n  },\n];\n","import React, {\n  createContext,\n  Dispatch,\n  FC,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\nimport {\n  initialRaw,\n  initialProcessed,\n  initialCooked,\n  initialDishes,\n} from \"../initialState\";\nimport { Dish } from \"../model/Dish\";\nimport { Ingredient } from \"../model/Ingredient\";\n\ninterface Context {\n  raw: Ingredient[];\n  processed: Ingredient[];\n  cooked: Ingredient[];\n  dishes: Dish[];\n  setRaw: Dispatch<React.SetStateAction<Ingredient[]>>;\n  setCooked: Dispatch<React.SetStateAction<Ingredient[]>>;\n  setProcessed: Dispatch<React.SetStateAction<Ingredient[]>>;\n  setDishes: Dispatch<React.SetStateAction<Dish[]>>;\n}\n\nconst DishesContext = createContext<Context | null>(null);\n\nexport const DishesProvider: FC = (props) => {\n  const [raw, setRaw] = useState(initialRaw);\n  const [processed, setProcessed] = useState(initialProcessed);\n  const [cooked, setCooked] = useState(initialCooked);\n  const [dishes, setDishes] = useState<Dish[]>(initialDishes);\n\n  const value = useMemo(\n    () => ({\n      raw,\n      processed,\n      cooked,\n      dishes,\n      setRaw,\n      setProcessed,\n      setCooked,\n      setDishes,\n    }),\n    [raw, processed, cooked, dishes, setRaw, setProcessed, setCooked, setDishes]\n  );\n\n  return <DishesContext.Provider value={value} {...props} />;\n};\n\nexport const useDishes = () => {\n  const context = useContext(DishesContext);\n\n  if (!context) {\n    throw new Error(`useDishes must be used within a DishesProvider`);\n  }\n\n  return context;\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Stack, Divider } from \"@chakra-ui/core\";\nimport Checkbox from \"./Checkbox\";\nimport { useDishes } from \"../../context/dishes\";\nimport { Ingredient } from \"../../model/Ingredient\";\nimport { DishForm } from \"../../model/Dish\";\n\ntype Props = {\n  onChange: (dishForm: DishForm, index: number) => void;\n  index: number;\n  id: string;\n};\n\nconst filter = (ingredients: Ingredient[], prevIngredient?: Ingredient[]) =>\n  ingredients?.filter(\n    ({ prev }) =>\n      prev?.filter((ingredient) =>\n        prevIngredient?.find(({ id }) => id === ingredient)\n      ).length === prev?.length\n  );\n\nconst IngredientsList: FC<Props> = ({ onChange, index, id }) => {\n  const { raw, processed, cooked } = useDishes();\n  const [dish, set] = useState<DishForm>({ id });\n\n  useEffect(() => {\n    onChange(dish, index);\n  }, [dish, onChange, index]);\n\n  const onRawChange = (raw: Ingredient[]) => {\n    set(({ id }) => ({\n      id,\n      raw,\n    }));\n  };\n\n  const onProcessedChange = (processed: Ingredient[]) => {\n    set(({ raw, id }) => ({\n      id,\n      raw,\n      processed,\n    }));\n  };\n\n  const onCookedChange = (cooked: Ingredient[]) => {\n    set((dish) => ({\n      ...dish,\n      cooked,\n    }));\n  };\n\n  const processedFiltered = filter(processed, dish?.raw);\n  const cookedFiltered = filter(cooked, dish?.processed);\n\n  return (\n    <>\n      <Stack isInline spacing={4}>\n        <Stack spacing={1}>\n          <Checkbox\n            type=\"raw\"\n            next={processed}\n            ingredients={raw}\n            onChange={onRawChange}\n          />\n        </Stack>\n        {!!dish?.raw?.length && (\n          <Stack spacing={1}>\n            <Checkbox\n              type=\"processed\"\n              onChange={onProcessedChange}\n              ingredients={processedFiltered}\n            />\n          </Stack>\n        )}\n        {!!dish?.processed?.length && (\n          <Stack spacing={1}>\n            <Checkbox\n              type=\"cooked\"\n              onChange={onCookedChange}\n              ingredients={cookedFiltered}\n            />\n          </Stack>\n        )}\n      </Stack>\n      <Divider />\n    </>\n  );\n};\n\nexport default IngredientsList;\n","import React, { ChangeEvent, FC, useCallback, useState } from \"react\";\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/core\";\nimport IngredientsList from \"./IngredientsList\";\nimport { uniqueId } from \"lodash\";\nimport { useDishes } from \"../../context/dishes\";\nimport { Dish, DishForm } from \"../../model/Dish\";\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst createNewDish = (name: string, dishes: DishForm[]): Dish => ({\n  id: uniqueId(),\n  name,\n  ingredients: dishes.map(({ cooked, processed, raw }) => ({\n    id: uniqueId(),\n    ingredients: raw,\n    prev: processed?.length\n      ? [\n          {\n            id: uniqueId(),\n            ingredients: processed,\n            prev: cooked?.length\n              ? [\n                  {\n                    id: uniqueId(),\n                    ingredients: cooked,\n                  },\n                ]\n              : undefined,\n          },\n        ]\n      : undefined,\n  })) as Dish[],\n});\n\nconst CreateDish: FC<Props> = ({ isOpen, onClose }) => {\n  const { setDishes } = useDishes();\n  const [name, setName] = useState(\"\");\n  const [partialDishes, setPartialDishes] = useState<DishForm[]>([]);\n\n  const handleCreate = () => {\n    const newDish = createNewDish(name, partialDishes);\n    setDishes((dishes) => [...dishes, newDish]);\n    onClose();\n  };\n\n  const isDisable: boolean =\n    !name.length ||\n    !partialDishes.length ||\n    !!partialDishes.reduce(\n      (disable, { raw }) => disable || !raw?.length,\n      false\n    );\n\n  const handleName = ({ target }: ChangeEvent<HTMLInputElement>) =>\n    setName(target.value);\n\n  const handleAddIngredient = () => {\n    const newDish: DishForm = { id: uniqueId() };\n    setPartialDishes((currentDishes) => [...currentDishes, newDish]);\n  };\n\n  const handleDishChange = useCallback(\n    (dishForm: DishForm, index: number) =>\n      setPartialDishes((partial) => [\n        ...partial.slice(0, index),\n        { ...partial[index], ...dishForm },\n        ...partial.slice(index + 1, partial.length),\n      ]),\n    []\n  );\n\n  return (\n    <Modal isOpen={isOpen}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Create a new dish</ModalHeader>\n        <ModalCloseButton onClick={onClose} />\n\n        <ModalBody>\n          <Input\n            mb=\"4\"\n            value={name}\n            placeholder=\"Dish name\"\n            onChange={handleName}\n          />\n\n          {partialDishes.map((props, index) => (\n            <IngredientsList\n              id={props.id}\n              index={index}\n              key={`list_${props.id}`}\n              onChange={handleDishChange}\n            />\n          ))}\n\n          <Button mt=\"2\" onClick={handleAddIngredient}>\n            Add ingredient\n          </Button>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button mr={3} onClick={onClose} variant=\"ghost\">\n            Cancel\n          </Button>\n\n          <Button\n            variantColor=\"teal\"\n            isDisabled={isDisable}\n            onClick={handleCreate}\n          >\n            Create\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default CreateDish;\n","import React from \"react\";\nimport { Button, useDisclosure } from \"@chakra-ui/core\";\nimport CreateDish from \"./Create\";\n\nconst CreateButton = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Button variantColor=\"teal\" size=\"sm\" mr=\"2\" onClick={onOpen}>\n        Create dish\n      </Button>\n      {isOpen && <CreateDish isOpen={isOpen} onClose={onClose} />}\n    </>\n  );\n};\n\nexport default CreateButton;\n","import React, { ChangeEvent, FC, useState } from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  Input,\n  Button,\n  ModalFooter,\n  Stack,\n} from \"@chakra-ui/core\";\nimport { uniqueId } from \"lodash\";\nimport { useDishes } from \"../../context/dishes\";\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst AddIngredientsModal: FC<Props> = ({ isOpen, onClose }) => {\n  const { setRaw, setProcessed, setCooked } = useDishes();\n\n  const [raw, setCustomRaw] = useState(\"\");\n  const [processed, setCustomProcessed] = useState(\"\");\n  const [cooked, setCustomCooked] = useState(\"\");\n\n  const handleCustomRaw = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setCustomRaw(target.value);\n  };\n  const handleCustomProcessed = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setCustomProcessed(target.value);\n  };\n  const handleCustomCooked = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setCustomCooked(target.value);\n  };\n\n  const resetValues = () => {\n    setCustomCooked(\"\");\n    setCustomProcessed(\"\");\n    setCustomRaw(\"\");\n  };\n\n  const handleAddCustom = () => {\n    const newRaw = {\n      name: raw,\n      id: uniqueId(\"raw_\"),\n    };\n    const newProcessed = {\n      name: processed,\n      id: uniqueId(\"processed_\"),\n      prev: [newRaw.id],\n    };\n    const newCooked = {\n      name: cooked,\n      id: uniqueId(\"cooked_\"),\n      prev: [newProcessed.id],\n    };\n\n    if (raw) {\n      setRaw((old) => [...old, newRaw]);\n    }\n\n    if (processed) {\n      setProcessed((old) => [...old, newProcessed]);\n    }\n\n    if (cooked) {\n      setCooked((old) => [...old, newCooked]);\n    }\n\n    resetValues();\n    onClose();\n  };\n\n  const handleClose = () => {\n    resetValues();\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen}>\n      <ModalOverlay />\n\n      <ModalContent>\n        <ModalHeader>Create a new dish</ModalHeader>\n\n        <ModalCloseButton onClick={handleClose} />\n\n        <ModalBody>\n          <Stack spacing=\"4\">\n            <Input\n              value={raw}\n              placeholder=\"Add a raw ingredient\"\n              onChange={handleCustomRaw}\n            />\n            <Input\n              value={processed}\n              isDisabled={!raw.length}\n              placeholder=\"Add a processed ingredient\"\n              onChange={handleCustomProcessed}\n            />\n            <Input\n              value={cooked}\n              isDisabled={!processed.length}\n              placeholder=\"Add a cooked ingredient\"\n              onChange={handleCustomCooked}\n            />\n          </Stack>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button mr={3} onClick={handleClose} variant=\"ghost\">\n            Cancel\n          </Button>\n\n          <Button\n            variantColor=\"teal\"\n            isDisabled={!raw.length}\n            onClick={handleAddCustom}\n          >\n            Add\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default AddIngredientsModal;\n","import React from \"react\";\nimport { Button, useDisclosure } from \"@chakra-ui/core\";\nimport Modal from \"./Modal\";\n\nconst AddIngredientsButton = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Button onClick={onOpen} variantColor=\"teal\" size=\"sm\">\n        Add ingredient\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose} />\n    </>\n  );\n};\n\nexport default AddIngredientsButton;\n","import React, { FC, useEffect } from \"react\";\n\ntype Props = {\n  setIsOpen: (isOpen: boolean) => void;\n};\n\nconst HighlightTag: FC<Props> = ({ children, setIsOpen }) => {\n  useEffect(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  return <span className=\"highlight\">{children}</span>;\n};\n\nexport default HighlightTag;\n","import { Icon } from \"@chakra-ui/core\";\nimport React, { FC, Fragment, memo, useEffect } from \"react\";\nimport Highlighter from \"react-highlight-words\";\nimport { Dish } from \"../../model/Dish\";\nimport HighlightTag from \"./HighlightTag\";\n\ntype Props = {\n  search: string;\n  prev?: Dish[];\n  ingredients?: Dish[];\n  setIsOpen: (isOpen: boolean) => void;\n};\n\nconst Ingredients: FC<Props> = memo(\n  ({ setIsOpen, search, prev, ingredients }) => {\n    const name = ingredients?.map(({ name }) => name).join(\" & \") || \"\";\n\n    useEffect(() => {\n      if (!search) {\n        setIsOpen(false);\n      }\n    }, [search, setIsOpen]);\n\n    return (\n      <>\n        <Highlighter\n          autoEscape={true}\n          searchWords={[search]}\n          textToHighlight={name}\n          highlightTag={(props) => (\n            <HighlightTag setIsOpen={setIsOpen} {...props} />\n          )}\n        />\n\n        {prev?.map((props) => (\n          <Fragment key={props.id}>\n            <Icon color=\"gray.300\" name=\"chevron-right\" />\n            <Ingredients {...props} search={search} setIsOpen={setIsOpen} />\n          </Fragment>\n        ))}\n      </>\n    );\n  }\n);\n\nexport default Ingredients;\n","import {\n  AccordionHeader,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Divider,\n} from \"@chakra-ui/core\";\nimport React, { FC, useState } from \"react\";\nimport { Dish as IDish } from \"../../model/Dish\";\nimport Ingredients from \"./Ingredients\";\n\ntype Props = {\n  search: string;\n} & IDish;\n\nconst Dish: FC<Props> = ({ name, ingredients, search }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleHeaderClick = () => setIsOpen((state) => !state);\n\n  return (\n    <AccordionItem isOpen={isOpen}>\n      <AccordionHeader\n        onClick={handleHeaderClick}\n        _expanded={{ bg: \"rgba(255,255,255,0.06)\" }}\n      >\n        <Box flex=\"1\" textAlign=\"left\">\n          {name}\n        </Box>\n        <AccordionIcon />\n      </AccordionHeader>\n\n      <AccordionPanel pb=\"1\" pl=\"8\">\n        {ingredients?.map((ingerdients, index) => (\n          <Box key={ingerdients.id} mb=\"2\">\n            <Ingredients\n              setIsOpen={setIsOpen}\n              search={search}\n              {...ingerdients}\n            />\n            {index !== ingredients.length - 1 && <Divider></Divider>}\n          </Box>\n        ))}\n      </AccordionPanel>\n    </AccordionItem>\n  );\n};\n\nexport default Dish;\n","import { Accordion } from \"@chakra-ui/core\";\nimport React, { FC } from \"react\";\nimport { useDishes } from \"../../context/dishes\";\nimport Dish from \"./Dish\";\n\ntype Props = {\n  search: string;\n};\n\nconst Dishes: FC<Props> = ({ search }) => {\n  const { dishes } = useDishes();\n\n  return (\n    <Accordion mt=\"4\" borderRightWidth={1} borderLeftWidth={1}>\n      {dishes.map((dish) => (\n        <Dish search={search} key={dish.id} {...dish}></Dish>\n      ))}\n    </Accordion>\n  );\n};\n\nexport default Dishes;\n","import React, { ChangeEvent, useState } from \"react\";\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  FormHelperText,\n} from \"@chakra-ui/core\";\nimport { useDebounce } from \"../hooks/useDebounce\";\nimport CreateButton from \"./create/Button\";\nimport AddButton from \"./add-ingredients/Button\";\nimport Dishes from \"./dishes/Dishes\";\n\nconst Main = () => {\n  const [search, setSearch] = useState(\"\");\n  const debouncedSearch = useDebounce(search, 100);\n\n  const handleSearch = ({ target }: ChangeEvent<HTMLInputElement>) =>\n    setSearch(target.value);\n\n  return (\n    <Box maxW=\"xl\" mx=\"auto\" px=\"4\" py=\"8\">\n      <FormControl>\n        <FormLabel htmlFor=\"search\">Search an allergen</FormLabel>\n        <Input id=\"search\" type=\"text\" value={search} onChange={handleSearch} />\n        <FormHelperText id=\"email-helper-text\">E.g. Pork</FormHelperText>\n      </FormControl>\n\n      <Dishes search={debouncedSearch} />\n\n      <Box mt=\"4\" d=\"flex\" justifyContent=\"flex-end\">\n        <CreateButton />\n        <AddButton></AddButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Main;\n","import { useState, useEffect } from \"react\";\n\nexport function useDebounce(value: string, delay: number) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","import React from \"react\";\nimport { CSSReset, ThemeProvider, ColorModeProvider } from \"@chakra-ui/core\";\nimport Main from \"./components/Main\";\nimport { DishesProvider } from \"./context/dishes\";\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <ColorModeProvider>\n        <CSSReset />\n        <DishesProvider>\n          <Main />\n        </DishesProvider>\n      </ColorModeProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}